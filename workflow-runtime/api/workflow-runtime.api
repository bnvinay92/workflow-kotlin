public final class com/squareup/workflow/LaunchWorkflowKt {
	public static final fun launchWorkflowIn (Lkotlinx/coroutines/CoroutineScope;Lcom/squareup/workflow/Workflow;Lkotlinx/coroutines/flow/Flow;Lcom/squareup/workflow/Snapshot;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public static synthetic fun launchWorkflowIn$default (Lkotlinx/coroutines/CoroutineScope;Lcom/squareup/workflow/Workflow;Lkotlinx/coroutines/flow/Flow;Lcom/squareup/workflow/Snapshot;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun renderWorkflowIn (Lcom/squareup/workflow/Workflow;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/StateFlow;Lcom/squareup/workflow/Snapshot;Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/StateFlow;
	public static synthetic fun renderWorkflowIn$default (Lcom/squareup/workflow/Workflow;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/StateFlow;Lcom/squareup/workflow/Snapshot;Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/flow/StateFlow;
}

public final class com/squareup/workflow/RenderingAndSnapshot {
	public fun <init> (Ljava/lang/Object;Lcom/squareup/workflow/Snapshot;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun component2 ()Lcom/squareup/workflow/Snapshot;
	public final fun copy (Ljava/lang/Object;Lcom/squareup/workflow/Snapshot;)Lcom/squareup/workflow/RenderingAndSnapshot;
	public static synthetic fun copy$default (Lcom/squareup/workflow/RenderingAndSnapshot;Ljava/lang/Object;Lcom/squareup/workflow/Snapshot;ILjava/lang/Object;)Lcom/squareup/workflow/RenderingAndSnapshot;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getRendering ()Ljava/lang/Object;
	public final fun getSnapshot ()Lcom/squareup/workflow/Snapshot;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/squareup/workflow/WorkflowSession {
	public fun <init> (Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;)V
	public synthetic fun <init> (Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDiagnosticListener ()Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;
	public final fun getOutputs ()Lkotlinx/coroutines/flow/Flow;
	public final fun getRenderingsAndSnapshots ()Lkotlinx/coroutines/flow/Flow;
	public final fun setDiagnosticListener (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;)V
}

public final class com/squareup/workflow/diagnostic/ChainedDiagnosticListenerKt {
	public static final fun andThen (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;)Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;
}

public final class com/squareup/workflow/diagnostic/DebugSnapshotRecordingListener : com/squareup/workflow/diagnostic/WorkflowDiagnosticListener {
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public fun onAfterRenderPass (Ljava/lang/Object;)V
	public fun onAfterSnapshotPass ()V
	public fun onAfterWorkflowRendered (JLjava/lang/Object;)V
	public fun onBeforeRenderPass (Ljava/lang/Object;)V
	public fun onBeforeSnapshotPass ()V
	public fun onBeforeWorkflowRendered (JLjava/lang/Object;Ljava/lang/Object;)V
	public fun onPropsChanged (Ljava/lang/Long;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
	public fun onRuntimeStarted (Lkotlinx/coroutines/CoroutineScope;Ljava/lang/String;)V
	public fun onRuntimeStopped ()V
	public fun onSinkReceived (JLcom/squareup/workflow/WorkflowAction;)V
	public fun onWorkerOutput (JJLjava/lang/Object;)V
	public fun onWorkerStarted (JJLjava/lang/String;Ljava/lang/String;)V
	public fun onWorkerStopped (JJ)V
	public fun onWorkflowAction (JLcom/squareup/workflow/WorkflowAction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
	public fun onWorkflowStarted (JLjava/lang/Long;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Z)V
	public fun onWorkflowStopped (J)V
}

public class com/squareup/workflow/diagnostic/SimpleLoggingDiagnosticListener : com/squareup/workflow/diagnostic/WorkflowDiagnosticListener {
	public fun <init> ()V
	public fun onAfterRenderPass (Ljava/lang/Object;)V
	public fun onAfterSnapshotPass ()V
	public fun onAfterWorkflowRendered (JLjava/lang/Object;)V
	public fun onBeforeRenderPass (Ljava/lang/Object;)V
	public fun onBeforeSnapshotPass ()V
	public fun onBeforeWorkflowRendered (JLjava/lang/Object;Ljava/lang/Object;)V
	public fun onPropsChanged (Ljava/lang/Long;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
	public fun onRuntimeStarted (Lkotlinx/coroutines/CoroutineScope;Ljava/lang/String;)V
	public fun onRuntimeStopped ()V
	public fun onSinkReceived (JLcom/squareup/workflow/WorkflowAction;)V
	public fun onWorkerOutput (JJLjava/lang/Object;)V
	public fun onWorkerStarted (JJLjava/lang/String;Ljava/lang/String;)V
	public fun onWorkerStopped (JJ)V
	public fun onWorkflowAction (JLcom/squareup/workflow/WorkflowAction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
	public fun onWorkflowStarted (JLjava/lang/Long;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Z)V
	public fun onWorkflowStopped (J)V
	protected fun println (Ljava/lang/String;)V
}

public abstract interface class com/squareup/workflow/diagnostic/WorkflowDiagnosticListener {
	public abstract fun onAfterRenderPass (Ljava/lang/Object;)V
	public abstract fun onAfterSnapshotPass ()V
	public abstract fun onAfterWorkflowRendered (JLjava/lang/Object;)V
	public abstract fun onBeforeRenderPass (Ljava/lang/Object;)V
	public abstract fun onBeforeSnapshotPass ()V
	public abstract fun onBeforeWorkflowRendered (JLjava/lang/Object;Ljava/lang/Object;)V
	public abstract fun onPropsChanged (Ljava/lang/Long;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
	public abstract fun onRuntimeStarted (Lkotlinx/coroutines/CoroutineScope;Ljava/lang/String;)V
	public abstract fun onRuntimeStopped ()V
	public abstract fun onSinkReceived (JLcom/squareup/workflow/WorkflowAction;)V
	public abstract fun onWorkerOutput (JJLjava/lang/Object;)V
	public abstract fun onWorkerStarted (JJLjava/lang/String;Ljava/lang/String;)V
	public abstract fun onWorkerStopped (JJ)V
	public abstract fun onWorkflowAction (JLcom/squareup/workflow/WorkflowAction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
	public abstract fun onWorkflowStarted (JLjava/lang/Long;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Z)V
	public abstract fun onWorkflowStopped (J)V
}

public final class com/squareup/workflow/diagnostic/WorkflowDiagnosticListener$DefaultImpls {
	public static fun onAfterRenderPass (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;Ljava/lang/Object;)V
	public static fun onAfterSnapshotPass (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;)V
	public static fun onAfterWorkflowRendered (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;JLjava/lang/Object;)V
	public static fun onBeforeRenderPass (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;Ljava/lang/Object;)V
	public static fun onBeforeSnapshotPass (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;)V
	public static fun onBeforeWorkflowRendered (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;JLjava/lang/Object;Ljava/lang/Object;)V
	public static fun onPropsChanged (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;Ljava/lang/Long;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
	public static fun onRuntimeStarted (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;Lkotlinx/coroutines/CoroutineScope;Ljava/lang/String;)V
	public static fun onRuntimeStopped (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;)V
	public static fun onSinkReceived (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;JLcom/squareup/workflow/WorkflowAction;)V
	public static fun onWorkerOutput (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;JJLjava/lang/Object;)V
	public static fun onWorkerStarted (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;JJLjava/lang/String;Ljava/lang/String;)V
	public static fun onWorkerStopped (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;JJ)V
	public static fun onWorkflowAction (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;JLcom/squareup/workflow/WorkflowAction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
	public static fun onWorkflowStarted (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;JLjava/lang/Long;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Z)V
	public static fun onWorkflowStopped (Lcom/squareup/workflow/diagnostic/WorkflowDiagnosticListener;J)V
}

public final class com/squareup/workflow/diagnostic/WorkflowHierarchyDebugSnapshot {
	public fun <init> (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/Object;
	public final fun component3 ()Ljava/lang/Object;
	public final fun component4 ()Ljava/lang/Object;
	public final fun component5 ()Ljava/util/List;
	public final fun component6 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Lcom/squareup/workflow/diagnostic/WorkflowHierarchyDebugSnapshot;
	public static synthetic fun copy$default (Lcom/squareup/workflow/diagnostic/WorkflowHierarchyDebugSnapshot;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lcom/squareup/workflow/diagnostic/WorkflowHierarchyDebugSnapshot;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChildren ()Ljava/util/List;
	public final fun getProps ()Ljava/lang/Object;
	public final fun getRendering ()Ljava/lang/Object;
	public final fun getState ()Ljava/lang/Object;
	public final fun getWorkers ()Ljava/util/List;
	public final fun getWorkflowType ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun toDescriptionString ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class com/squareup/workflow/diagnostic/WorkflowHierarchyDebugSnapshot$ChildWorker {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lcom/squareup/workflow/diagnostic/WorkflowHierarchyDebugSnapshot$ChildWorker;
	public static synthetic fun copy$default (Lcom/squareup/workflow/diagnostic/WorkflowHierarchyDebugSnapshot$ChildWorker;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lcom/squareup/workflow/diagnostic/WorkflowHierarchyDebugSnapshot$ChildWorker;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDescription ()Ljava/lang/String;
	public final fun getKey ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/squareup/workflow/diagnostic/WorkflowHierarchyDebugSnapshot$ChildWorkflow {
	public fun <init> (Ljava/lang/String;Lcom/squareup/workflow/diagnostic/WorkflowHierarchyDebugSnapshot;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lcom/squareup/workflow/diagnostic/WorkflowHierarchyDebugSnapshot;
	public final fun copy (Ljava/lang/String;Lcom/squareup/workflow/diagnostic/WorkflowHierarchyDebugSnapshot;)Lcom/squareup/workflow/diagnostic/WorkflowHierarchyDebugSnapshot$ChildWorkflow;
	public static synthetic fun copy$default (Lcom/squareup/workflow/diagnostic/WorkflowHierarchyDebugSnapshot$ChildWorkflow;Ljava/lang/String;Lcom/squareup/workflow/diagnostic/WorkflowHierarchyDebugSnapshot;ILjava/lang/Object;)Lcom/squareup/workflow/diagnostic/WorkflowHierarchyDebugSnapshot$ChildWorkflow;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getKey ()Ljava/lang/String;
	public final fun getSnapshot ()Lcom/squareup/workflow/diagnostic/WorkflowHierarchyDebugSnapshot;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo {
	public fun <init> (Ljava/lang/String;Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Kind;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Kind;
	public final fun copy (Ljava/lang/String;Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Kind;)Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo;
	public static synthetic fun copy$default (Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo;Ljava/lang/String;Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Kind;ILjava/lang/Object;)Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getKind ()Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Kind;
	public final fun getWorkflowType ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun toDescriptionString ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public abstract class com/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Kind {
}

public final class com/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Kind$Passthrough : com/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Kind {
	public fun <init> (Ljava/lang/String;Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo;
	public final fun copy (Ljava/lang/String;Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo;)Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Kind$Passthrough;
	public static synthetic fun copy$default (Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Kind$Passthrough;Ljava/lang/String;Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo;ILjava/lang/Object;)Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Kind$Passthrough;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChildInfo ()Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo;
	public final fun getKey ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Kind$Updated : com/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Kind {
	public fun <init> (Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source;)V
	public final fun component1 ()Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source;
	public final fun copy (Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source;)Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Kind$Updated;
	public static synthetic fun copy$default (Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Kind$Updated;Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source;ILjava/lang/Object;)Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Kind$Updated;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getSource ()Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class com/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source {
}

public final class com/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source$Sink : com/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source {
	public static final field INSTANCE Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source$Sink;
}

public final class com/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source$Subtree : com/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source {
	public fun <init> (Ljava/lang/String;Ljava/lang/Object;Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/Object;
	public final fun component3 ()Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo;
	public final fun copy (Ljava/lang/String;Ljava/lang/Object;Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo;)Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source$Subtree;
	public static synthetic fun copy$default (Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source$Subtree;Ljava/lang/String;Ljava/lang/Object;Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo;ILjava/lang/Object;)Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source$Subtree;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChildInfo ()Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo;
	public final fun getKey ()Ljava/lang/String;
	public final fun getOutput ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source$Worker : com/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source {
	public fun <init> (Ljava/lang/String;Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/String;Ljava/lang/Object;)Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source$Worker;
	public static synthetic fun copy$default (Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source$Worker;Ljava/lang/String;Ljava/lang/Object;ILjava/lang/Object;)Lcom/squareup/workflow/diagnostic/WorkflowUpdateDebugInfo$Source$Worker;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getKey ()Ljava/lang/String;
	public final fun getOutput ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/squareup/workflow/internal/RealRenderContext : com/squareup/workflow/RenderContext, com/squareup/workflow/Sink {
	public fun <init> (Lcom/squareup/workflow/internal/RealRenderContext$Renderer;Lcom/squareup/workflow/internal/RealRenderContext$WorkerRunner;Lcom/squareup/workflow/internal/RealRenderContext$SideEffectRunner;Lkotlinx/coroutines/channels/SendChannel;)V
	public final fun freeze ()V
	public fun getActionSink ()Lcom/squareup/workflow/Sink;
	public fun makeActionSink ()Lcom/squareup/workflow/Sink;
	public fun onEvent (Lkotlin/jvm/functions/Function1;)Lcom/squareup/workflow/EventHandler;
	public synthetic fun onEvent (Lkotlin/jvm/functions/Function1;)Lkotlin/jvm/functions/Function1;
	public fun renderChild (Lcom/squareup/workflow/Workflow;Ljava/lang/Object;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public fun runningSideEffect (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public fun runningWorker (Lcom/squareup/workflow/Worker;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public fun send (Lcom/squareup/workflow/WorkflowAction;)V
	public synthetic fun send (Ljava/lang/Object;)V
}

public abstract interface class com/squareup/workflow/internal/RealRenderContext$Renderer {
	public abstract fun render (Lcom/squareup/workflow/Workflow;Ljava/lang/Object;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public abstract interface class com/squareup/workflow/internal/RealRenderContext$SideEffectRunner {
	public abstract fun runningSideEffect (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class com/squareup/workflow/internal/RealRenderContext$WorkerRunner {
	public abstract fun runningWorker (Lcom/squareup/workflow/Worker;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
}

public final class com/squareup/workflow/internal/WorkflowId {
	public fun <init> (Lcom/squareup/workflow/Workflow;Ljava/lang/String;)V
	public synthetic fun <init> (Lcom/squareup/workflow/Workflow;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lkotlin/reflect/KClass;Ljava/lang/String;)V
	public final fun copy (Lkotlin/reflect/KClass;Ljava/lang/String;)Lcom/squareup/workflow/internal/WorkflowId;
	public static synthetic fun copy$default (Lcom/squareup/workflow/internal/WorkflowId;Lkotlin/reflect/KClass;Ljava/lang/String;ILjava/lang/Object;)Lcom/squareup/workflow/internal/WorkflowId;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getTypeDebugString ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/squareup/workflow/testing/LaunchWorkflowKt {
	public static final fun launchWorkflowForTestFromStateIn (Lkotlinx/coroutines/CoroutineScope;Lcom/squareup/workflow/StatefulWorkflow;Lkotlinx/coroutines/flow/Flow;Lcom/squareup/workflow/testing/WorkflowTestParams;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
}

public final class com/squareup/workflow/testing/WorkflowTestParams {
	public fun <init> ()V
	public fun <init> (Lcom/squareup/workflow/testing/WorkflowTestParams$StartMode;Z)V
	public synthetic fun <init> (Lcom/squareup/workflow/testing/WorkflowTestParams$StartMode;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lcom/squareup/workflow/testing/WorkflowTestParams$StartMode;
	public final fun component2 ()Z
	public final fun copy (Lcom/squareup/workflow/testing/WorkflowTestParams$StartMode;Z)Lcom/squareup/workflow/testing/WorkflowTestParams;
	public static synthetic fun copy$default (Lcom/squareup/workflow/testing/WorkflowTestParams;Lcom/squareup/workflow/testing/WorkflowTestParams$StartMode;ZILjava/lang/Object;)Lcom/squareup/workflow/testing/WorkflowTestParams;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCheckRenderIdempotence ()Z
	public final fun getStartFrom ()Lcom/squareup/workflow/testing/WorkflowTestParams$StartMode;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class com/squareup/workflow/testing/WorkflowTestParams$StartMode {
}

public final class com/squareup/workflow/testing/WorkflowTestParams$StartMode$StartFresh : com/squareup/workflow/testing/WorkflowTestParams$StartMode {
	public static final field INSTANCE Lcom/squareup/workflow/testing/WorkflowTestParams$StartMode$StartFresh;
}

public final class com/squareup/workflow/testing/WorkflowTestParams$StartMode$StartFromCompleteSnapshot : com/squareup/workflow/testing/WorkflowTestParams$StartMode {
	public fun <init> (Lcom/squareup/workflow/Snapshot;)V
	public final fun component1 ()Lcom/squareup/workflow/Snapshot;
	public final fun copy (Lcom/squareup/workflow/Snapshot;)Lcom/squareup/workflow/testing/WorkflowTestParams$StartMode$StartFromCompleteSnapshot;
	public static synthetic fun copy$default (Lcom/squareup/workflow/testing/WorkflowTestParams$StartMode$StartFromCompleteSnapshot;Lcom/squareup/workflow/Snapshot;ILjava/lang/Object;)Lcom/squareup/workflow/testing/WorkflowTestParams$StartMode$StartFromCompleteSnapshot;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getSnapshot ()Lcom/squareup/workflow/Snapshot;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/squareup/workflow/testing/WorkflowTestParams$StartMode$StartFromState : com/squareup/workflow/testing/WorkflowTestParams$StartMode {
	public fun <init> (Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/Object;)Lcom/squareup/workflow/testing/WorkflowTestParams$StartMode$StartFromState;
	public static synthetic fun copy$default (Lcom/squareup/workflow/testing/WorkflowTestParams$StartMode$StartFromState;Ljava/lang/Object;ILjava/lang/Object;)Lcom/squareup/workflow/testing/WorkflowTestParams$StartMode$StartFromState;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getState ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/squareup/workflow/testing/WorkflowTestParams$StartMode$StartFromWorkflowSnapshot : com/squareup/workflow/testing/WorkflowTestParams$StartMode {
	public fun <init> (Lcom/squareup/workflow/Snapshot;)V
	public final fun component1 ()Lcom/squareup/workflow/Snapshot;
	public final fun copy (Lcom/squareup/workflow/Snapshot;)Lcom/squareup/workflow/testing/WorkflowTestParams$StartMode$StartFromWorkflowSnapshot;
	public static synthetic fun copy$default (Lcom/squareup/workflow/testing/WorkflowTestParams$StartMode$StartFromWorkflowSnapshot;Lcom/squareup/workflow/Snapshot;ILjava/lang/Object;)Lcom/squareup/workflow/testing/WorkflowTestParams$StartMode$StartFromWorkflowSnapshot;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getSnapshot ()Lcom/squareup/workflow/Snapshot;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

